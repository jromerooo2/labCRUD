<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQ0SURBVHhe7ZpNiFZVGMfHppFhJKUoXLQJwdSaoY0tEsSgFoZuovzclNWuZUTgJ61NU6hF0E6Y
        RRQpIvZFCxFcqAs/igR12ZRRQQV+pdPvec//Xr3de9/3nnfec+bCnB/84X2fj/uc95m5h3POvUOJRCKR
        SCQSGdPT0/PQVnQC/YFicRP9gg6hCQ0nLhQeRpNotrFmbNaw4kHRXZ3y7eAGGtfQwkOxMfSPVW4Rkxpe
        eCj2vKvZKqY0vPBQ7FVXs1Xc1fDCQ7ENrma70PDCQ63UAFeyXWh44aFWaoAr2Yjb6Cv0mfS1bFVMocMo
        iz2HGqPhhYdaPg3YqbQcbLudq8QyhXTguy21z3c8DVBaeKjl04ANSssxm3MVkbsAZvtPaIRSwkOtNjbg
        pFLCQzGfBmxSWo7ZnKvEAwrJwfaFc3XF5o1RpYSHYj4NsB8wplTLtX3El+aoYBuap1CLXYqumaML36P5
        SokDBX0aEJJf0WINqwS+cfQhuoh+ky6g/egphflDclsa8JaGVAD7fPQR+teCajDfQTSitOaQ1IYGXEXD
        GlIONvvx31hAQ2yN4ncLkdCGBryn4RTA/olze/Gx0ptBQhsasFTDycE2ge50vH7Y7dB8TiDYpwGX0Rb0
        omSHqFdQFZ+jdSiL3Y6q7uNrGkoB7HZP98t+XaY3BPs04A2l5WB707lKPKSQHGy2d/g/J+QugP1H5+6L
        C7pMbwj2aUCIleARuQtg/9u5++IvXaY3BM92A47KXQD7TA5qgzUgxC1wSu4C2GdyC1zUZXpDsE8DbBJ8
        DVmOyT53mwQ3oiy2bhK0FWC+ZM7A1spJMBTLNZwcbE+jbqu/OuyApnS9WghuQwPe0XAKYD/g3F7sVXoz
        SGhDA+w2qto+j6CqeaOO4+hBpTeDhDY0wHhdQyqAfU5shgw7K1igYZXAl22Hf0DXJdsaR90O24HIQqVa
        7iLU7UAk35nxeQWqOxC5hF5QaFwo7NOAEEdin6L8lCk6FPdpwKBXgu/K1RNiR9EzaBXKNljPydb/GSLJ
        s9WAPTLXQsyzaB86g26hOsx3GlnsSqU3gwSfBuxQWg62urdLnlRIB77bg5Hs6dAxVLpFDOwW9wqyya5f
        bHJ8WZfsDoE+DbBVlp3cfivZ526PxrI4U/bjbZf3uMoXwP4YsmsOiu/Qo7p8NQT4NGAQvK/SBbAvQXY2
        OGhskfWEypTBGbMBtmAp/fWxLUQ/WUAg7Pi8eo2BI2YD6ra+dQ9YB0npwW4HHDEb8IHK5mCz9b7NF6H5
        GZWXyhhjviT1tsrmYLNtbyxWqOw9MMZ8TW6LyuZgW+9cUVivsvfAGPNFycYLqUCU6nfAEetV2aoGvORc
        UVirskVwxHpZuqoBj6A/O96w/I4eVtkyOO9/Xd722iGo/BfEvgadRXctaMDYNe3aq1UukUgkEonEnGZo
        6D80yIDiK/4ZSAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAEQAAABEAAAARAAAAEQAAABEAAAARAAA
        AEQAAABEAAAARAAAAEQAAABEAAAARAAAAC4AAAAAAAAAMAAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAALgAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFUAAABVAAAA/wAAAM8AAABVAAAAVQAA
        AFUAAABVAAAAXgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAVQAAAP8AAADnAAAAIwAA
        AAAAAAAAAAAAAAAAAGIAAAD/AAAAdwAAAAAAAAAAAAAAAwAAAMoAAAD/AAAAVQAAAFUAAAD/AAAA/wAA
        APsAAADCAAAAuwAAANUAAAD/AAAA/wAAAOEAAACqAAAAqgAAALEAAAD3AAAA/wAAAFUAAABVAAAA/wAA
        AP8AAAD/AAAAYAAAAAsAAACuAAAA/wAAAP8AAADhAAAAuwAAALsAAAC9AAAA9wAAAP8AAABVAAAAVQAA
        AP8AAAD/AAAA/wAAAA8AAAAAAAAAZQAAAP8AAAD/AAAAewAAAAAAAAAAAAAABwAAAMoAAAD/AAAAVQAA
        AFUAAAD/AAAA/wAAAP8AAACrAAAAYAAAANwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AFUAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABVAAAALwAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHIAAABzAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAALgAAAAAAAAAuAAAAVQAAAFUAAABVAAAAVQAAAFUAAACOAAAAjgAAAFUAAABVAAAAVQAA
        AFUAAABVAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAFMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAIABAACAAQAAnwEAAJ95AACAAQAAjAEAAI55
        AACEAQAAgAEAAIGBAAD+fwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAA
        AJIAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACRAAAAKgAAAAAAAAAAAAAAAAAA
        AC0AAAD4AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3AAAAKwAA
        AAAAAAAAAAAAkgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACQAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAOEAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAADLAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAAWwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAA
        AP8AAACLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQAAAP8AAAD/AAAA6QAA
        ACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAACvAAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAA
        AP8AAAD/AAAA/wAAAPwAAABtAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAADgAAAA/wAA
        AP8AAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAACqAAAAAAAA
        AAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADuAAAAngAAAHMAAABYAAAAaAAAAIsAAADWAAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAB4AAAARAAAAEQAAABEAAAARAAAAEQAAABaAAAA3QAAAP8AAAD/AAAA/wAA
        AKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOgAAABUAAAACgAA
        ADEAAAC/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAUQAA
        AAAAAAAAAAAAAAAAABAAAADtAAAA/wAAAP8AAAD/AAAA/wAAAPsAAAB4AAAAVQAAAFUAAABVAAAAVQAA
        AFUAAABfAAAA3QAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAOAAAAAAAAAAAAAAAAAAAAAAAAALkAAAD/AAAA/wAAAP8AAAD/AAAAugAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAC4AAAAAAAAAAAAAAAAAAAABAAAA2QAAAP8AAAD/AAAA/wAAAP8AAADpAAAAKAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAK8AAAD/AAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAvgAAABAAAAAAAAAAAQAAAHoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAA
        AKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA7wAAAMAAAADeAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAA
        AAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAJAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADpAAAAIwAAACUAAADqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAjgAAAAAAAAAAAAAALQAAAPgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAK0AAAAAAAAAAAAAAK0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPcAAAArAAAAAAAAAAAAAAAAAAAAKwAAAJIAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAkwAAAEQAAABEAAAAkwAAALsAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAACRAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAA/wAAAP8AAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAAD+AAAA/gAA
        AC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC4AAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////4AAAB8AAAAOAAAABgAAAAYAA
        AAGAAAABh/8AAYP/H8GD/h/hgHAfwYAAAAGAcAABgPgfwYD4H+GA+B/BgHgAAYAAAAGAAAABgAAAAYAB
        gAHAAYAD4AGAB//+f////n//////////////////
</value>
  </data>
</root>