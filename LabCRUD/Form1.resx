<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAO1SURBVHhe7ZpLqE1RGMevRx6FpESJASVmhMgjKRNGDEwoIxmRAaWUKClTF3lMyNDUjGKCKCmv
        ATMjyVsYef3/55yvluXb1tr72/ustW/7V7/uOWvv9X3r/Fv73n3uOSMdHR0dHcNnAtwKzw/kY46NedbD
        i/Aj/O3JMR7jOWOKufAwfA79F10kz+WcObCVTIW74U34A2ovMkbOZY0dcBLMnv9tcasfYJaXSJUtbjX5
        JVLXFrc69EukyS1utdFLZBd8ALXGOXofcs21cAxqTdrgUWjmHdSKt8E30IxWuE2a0Yq2STNa0TZpRiv6
        XRlLbdGazGhFeeOxAvLv7ufBWArfw9OQa+GatHPMaEXZTJgC+fw6HMZdIXuwF3uyt5AsAJd5kPfoL6E2
        zyJrsjZ7aGQRgEsdl4i7xUNkF4BQ9hIp2uIhsg3AZTE8Cd9CvybHeIznVCFZAPMHP8twDfo1OVaWBYOf
        JFkAfP4Q7oXTOBCBJQD2YC/25DwhaQAif2nFYAmAPdx5QhYBUGETPAEX9p79TWwAiyBrsJbgzxOyC0AW
        9AvehlugEAqA53IO5/JYmX5FxyujFa2yIPcFhgLwj2cdwBX4FcoxoekA2PMyBwYkC4BMh3vgvd6zPk0F
        cBeyF3u6JA1Ao6kAisguAMJ7eN7L8y6vbACcE/s+gGQZgMCbl1X9hz1CAfDc2JsqIesAfEIBVCFZAKNw
        ef9hNHUEwJ5n+g97JAtAxh7BfRyIwBLAfsheMk9IHoAozIAT+w//oUwArMFagj9PyC4AnvMJXoWb4Tgo
        hALguZzDuawR288/5h6vjFa0yoIuQCEUAM91j42JANwXGArAP551AGvgOSjv04UmA+AHtmfhag4MSBaA
        wG9obO8/7NFUANug9m2Q5AH4LIOPocypGgBrsFaI7AIQlsBTkFtWCAXAczmHc2MZagD8gpSFUABV4Jr8
        mtSMVpTKf4Ldm5RY6gpgFjwA5T/EmmZ+Qq2wyBuVS3AtjMUawDrInuzt13Hl2s08g1pxzRfwCAx9WFIl
        ANZkbfbw5xb5BJrZCL9ArUGRTP4G3An5pUqf2AA4l193Y63QTvTlh7IbYC3Mhodgmd0gapdIKIDYLa75
        FB6EXHMjrIR8H+5/QhOjXCK3nDGRY2W3uMi1cE1c29AYD+Ud2zeoLaxJ2VPeaXItSZkJ+SfxDtQWW6fs
        wV7smSVLIe/iXkPtBVTxFTwOWbs1WC+RrLa4lTKXSPZb3Ip2ibRyi1uZDPnPFMrHHR1DZ2TkD/hb8EVB
        BzSOAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAEQAAABEAAAARAAAAEQAAABEAAAARAAA
        AEQAAABEAAAARAAAAEQAAABEAAAARAAAAC4AAAAAAAAAMAAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAALgAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFUAAABVAAAA/wAAAM8AAABVAAAAVQAA
        AFUAAABVAAAAXgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAVQAAAP8AAADnAAAAIwAA
        AAAAAAAAAAAAAAAAAGIAAAD/AAAAdwAAAAAAAAAAAAAAAwAAAMoAAAD/AAAAVQAAAFUAAAD/AAAA/wAA
        APsAAADCAAAAuwAAANUAAAD/AAAA/wAAAOEAAACqAAAAqgAAALEAAAD3AAAA/wAAAFUAAABVAAAA/wAA
        AP8AAAD/AAAAYAAAAAsAAACuAAAA/wAAAP8AAADhAAAAuwAAALsAAAC9AAAA9wAAAP8AAABVAAAAVQAA
        AP8AAAD/AAAA/wAAAA8AAAAAAAAAZQAAAP8AAAD/AAAAewAAAAAAAAAAAAAABwAAAMoAAAD/AAAAVQAA
        AFUAAAD/AAAA/wAAAP8AAACrAAAAYAAAANwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AFUAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABVAAAALwAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAHIAAABzAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAALgAAAAAAAAAuAAAAVQAAAFUAAABVAAAAVQAAAFUAAACOAAAAjgAAAFUAAABVAAAAVQAA
        AFUAAABVAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAFMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAIABAACAAQAAnwEAAJ95AACAAQAAjAEAAI55
        AACEAQAAgAEAAIGBAAD+fwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwAA
        AJIAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACRAAAAKgAAAAAAAAAAAAAAAAAA
        AC0AAAD4AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3AAAAKwAA
        AAAAAAAAAAAAkgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACQAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAOEAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAADLAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAAWwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAA
        AP8AAACLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQAAAP8AAAD/AAAA6QAA
        ACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAACvAAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAA
        AP8AAAD/AAAA/wAAAPwAAABtAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAADgAAAA/wAA
        AP8AAAC6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGYAAAD/AAAA/wAAAP8AAACqAAAAAAAA
        AAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAADuAAAAngAAAHMAAABYAAAAaAAAAIsAAADWAAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAB4AAAARAAAAEQAAABEAAAARAAAAEQAAABaAAAA3QAAAP8AAAD/AAAA/wAA
        AKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOgAAABUAAAACgAA
        ADEAAAC/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAUQAA
        AAAAAAAAAAAAAAAAABAAAADtAAAA/wAAAP8AAAD/AAAA/wAAAPsAAAB4AAAAVQAAAFUAAABVAAAAVQAA
        AFUAAABfAAAA3QAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAOAAAAAAAAAAAAAAAAAAAAAAAAALkAAAD/AAAA/wAAAP8AAAD/AAAAugAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABmAAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAC4AAAAAAAAAAAAAAAAAAAABAAAA2QAAAP8AAAD/AAAA/wAAAP8AAADpAAAAKAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAK8AAAD/AAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAvgAAABAAAAAAAAAAAQAAAHoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAA
        AKoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA7wAAAMAAAADeAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAA
        AAAAAAAAAAAAqgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAJAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADpAAAAIwAAACUAAADqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAjgAAAAAAAAAAAAAALQAAAPgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAK0AAAAAAAAAAAAAAK0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPcAAAArAAAAAAAAAAAAAAAAAAAAKwAAAJIAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAkwAAAEQAAABEAAAAkwAAALsAAAC7AAAAuwAA
        ALsAAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAACRAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAA/wAAAP8AAABVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8AAAD+AAAA/gAA
        AC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC4AAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////4AAAB8AAAAOAAAABgAAAAYAA
        AAGAAAABh/8AAYP/H8GD/h/hgHAfwYAAAAGAcAABgPgfwYD4H+GA+B/BgHgAAYAAAAGAAAABgAAAAYAB
        gAHAAYAD4AGAB//+f////n//////////////////
</value>
  </data>
</root>